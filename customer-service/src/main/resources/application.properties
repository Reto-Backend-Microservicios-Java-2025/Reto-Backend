spring.application.name=customer-service

# R2DBC Configuration
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/customerDB
spring.r2dbc.username=postgres
spring.r2dbc.password=1234

# R2DBC Connection Pool (Optional but recommended)
spring.r2dbc.pool.enabled=true
spring.r2dbc.pool.initial-size=5
spring.r2dbc.pool.max-size=20

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8090/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Usa IP en lugar del hostname
eureka.instance.prefer-ip-address=true

# IP explícita para registro
eureka.instance.ip-address=127.0.0.1

# Puerto correcto del servicio
eureka.instance.non-secure-port=8030

# Definir la URL de la instancia
eureka.instance.instance-id=host.docker.internal:customer-service:8030

# Spring Boot Admin Client
spring.boot.admin.client.url=http://localhost:8080
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=ALWAYS

# Port Configuration
server.port=8030

# Logging SQL queries (if using DatabaseClient or Querydsl or custom loggers)
logging.level.io.r2dbc.postgresql.QUERY=DEBUG
logging.level.io.r2dbc.postgresql.PARAM=DEBUG

# Ejecutar schema.sql al iniciar
spring.sql.init.mode=never